// Code generated by protoc-gen-go-errors. DO NOT EDIT.

package v1

import (
	fmt "fmt"
	errors "github.com/go-kratos/kratos/v2/errors"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the kratos package it is being compiled against.
const _ = errors.SupportPackageIsVersion1

// 订单找不到 ，可能是订单不存在或输入的订单标识有误
func IsOrderNotFound(err error) bool {
	if err == nil {
		return false
	}
	e := errors.FromError(err)
	return e.Reason == ErrorReason_OrderNotFound.String() && e.Code == 404
}

// 订单找不到 ，可能是订单不存在或输入的订单标识有误
func ErrorOrderNotFound(format string, args ...interface{}) *errors.Error {
	return errors.New(404, ErrorReason_OrderNotFound.String(), fmt.Sprintf(format, args...))
}

// 订单已存在，无法创建用户
func IsOrderAlreadyExists(err error) bool {
	if err == nil {
		return false
	}
	e := errors.FromError(err)
	return e.Reason == ErrorReason_OrderAlreadyExists.String() && e.Code == 409
}

// 订单已存在，无法创建用户
func ErrorOrderAlreadyExists(format string, args ...interface{}) *errors.Error {
	return errors.New(409, ErrorReason_OrderAlreadyExists.String(), fmt.Sprintf(format, args...))
}

// 创建订单失败，可能是由于服务器或其他问题导致的创建过程中的错误
func IsOrderCreateFailed(err error) bool {
	if err == nil {
		return false
	}
	e := errors.FromError(err)
	return e.Reason == ErrorReason_OrderCreateFailed.String() && e.Code == 541
}

// 创建订单失败，可能是由于服务器或其他问题导致的创建过程中的错误
func ErrorOrderCreateFailed(format string, args ...interface{}) *errors.Error {
	return errors.New(541, ErrorReason_OrderCreateFailed.String(), fmt.Sprintf(format, args...))
}

// Copyright 2024 Lingfei Kong <colin404@foxmail.com>. All rights reserved.
// Use of this source code is governed by a MIT style
// license that can be found in the LICENSE file. The original repo for
// this file is https://github.com/rosas/onex.
//

// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/rosas/onex/internal/usercenter/biz (interfaces: IBiz)

// Package biz is a generated GoMock package.
package biz

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	auth "github.com/rosas/onex/internal/usercenter/biz/auth"
	secret "github.com/rosas/onex/internal/usercenter/biz/secret"
	user "github.com/rosas/onex/internal/usercenter/biz/user"
)

// MockIBiz is a mock of IBiz interface.
type MockIBiz struct {
	ctrl     *gomock.Controller
	recorder *MockIBizMockRecorder
}

// MockIBizMockRecorder is the mock recorder for MockIBiz.
type MockIBizMockRecorder struct {
	mock *MockIBiz
}

// NewMockIBiz creates a new mock instance.
func NewMockIBiz(ctrl *gomock.Controller) *MockIBiz {
	mock := &MockIBiz{ctrl: ctrl}
	mock.recorder = &MockIBizMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIBiz) EXPECT() *MockIBizMockRecorder {
	return m.recorder
}

// Auths mocks base method.
func (m *MockIBiz) Auths() auth.AuthBiz {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Auths")
	ret0, _ := ret[0].(auth.AuthBiz)
	return ret0
}

// Auths indicates an expected call of Auths.
func (mr *MockIBizMockRecorder) Auths() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Auths", reflect.TypeOf((*MockIBiz)(nil).Auths))
}

// Secrets mocks base method.
func (m *MockIBiz) Secrets() secret.SecretBiz {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Secrets")
	ret0, _ := ret[0].(secret.SecretBiz)
	return ret0
}

// Secrets indicates an expected call of Secrets.
func (mr *MockIBizMockRecorder) Secrets() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Secrets", reflect.TypeOf((*MockIBiz)(nil).Secrets))
}

// Users mocks base method.
func (m *MockIBiz) Users() user.UserBiz {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Users")
	ret0, _ := ret[0].(user.UserBiz)
	return ret0
}

// Users indicates an expected call of Users.
func (mr *MockIBizMockRecorder) Users() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Users", reflect.TypeOf((*MockIBiz)(nil).Users))
}

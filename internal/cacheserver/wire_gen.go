// Copyright 2024 Lingfei Kong <colin404@foxmail.com>. All rights reserved.
// Use of this source code is governed by a MIT style
// license that can be found in the LICENSE file. The original repo for
// this file is https://github.com/rosas/onex.
//

// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package cacheserver

import (
	"github.com/rosas/onex/internal/cacheserver/biz"
	"github.com/rosas/onex/internal/cacheserver/service"
	"github.com/rosas/onex/internal/cacheserver/store"
	"github.com/rosas/onex/pkg/api/cacheserver/v1"
	"github.com/rosas/onex/pkg/cache"
	"github.com/rosas/onex/pkg/db"
	"google.golang.org/protobuf/types/known/anypb"
)

// Injectors from wire.go:

func wireServer(mySQLOptions *db.MySQLOptions, cacheCache cache.Cache[*anypb.Any], bool2 bool) (v1.CacheServerServer, error) {
	gormDB, err := db.NewMySQL(mySQLOptions)
	if err != nil {
		return nil, err
	}
	datastore := store.NewStore(gormDB, bool2)
	bizBiz := biz.NewBiz(cacheCache, datastore)
	cacheServerService := service.NewCacheServerService(bizBiz)
	return cacheServerService, nil
}
